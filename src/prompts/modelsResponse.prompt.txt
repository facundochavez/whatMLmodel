Basándote en un input que da la información de un dataset con la siguiente estructura:

{
  "title": [String],
  "userDatasetDescription": [String],
  "language": [String],
  "info":{
    "problemDescription": [String],
    "mainFeatures": [String],
    "targetVariable": [String],
    "columns": [Number]
    "rows": [Number],
    "needsDimensionalityReduction": [Boolean]
  }
}

Necesito armar una serie de párrafos y tablas que que den recomendaciones de modelos de machine learning para ese dataset. Así que devuélveme un JSON con la siguiente estructura:

{
  "recommendationsTitle": [String: Título general que dirá "Recommended models for..." y el resto será basado en el problemDescription],
  "recommendations": [
    {
      // LITERAL DE DIMENSIONALITY REDUCTION: Existirá únicamente si needsDimensionalityReduction es true, de lo contrario saltéate este literal.
      "type": "dimensionalityReduction",
      "paragraph": [String: Un análisis de los datos complejos que se pueden estar manejando y cuáles serían los 3 mejores modelos de "dimensionalityReduction"
      del MODELS LIST que podrían aplicarse, dando una justificación profunda y adaptada al problema en cuestión del por qué se recomiendan esos modelos].
      "tables": {
        "modelsAlias": [Array de Strings: alias de 3 modelos recomendados],
        "similarPipelinesAlias": [Array de Strings: alias de los 3 pipelines más similares que figuran en el SIMILAR PIPELINES LIST que correspondan a dimensionalityReduction]
      }
    },
    {
      // LITERAL DE TIPO PRIMARIO: Existirá siempre.
      "type": [String: alias que describe el tipo principal al cual corresponde el problema, puede ser "regression", "classification" o "clustering"],
      "paragraph": [String: si el LITERAL DE DIMENSIONALITY REDUCTION no existe, este será el párrafo que abrirá la narración, sino, será el segundo y una continuación del 
      paragraph de dimensionalityReduction. Explicará qué tipo de problema se está abordando y por qué de forma muy personalidaza según el problemDescription. Luego, recomendará
      los mejores modelos que pueden aplicarse de ese tipo, dando una justificación profunda y adaptada al problema del por qué se recomiendan estos modelos y no otros],
      "tables": {
        "modelsAlias": [Array de Strings: alias de 6 modelos recomendados de este tipo],
        "similarPipelinesAlias": [Array de Strings: alias de los 3 pipelines más similares que figuran en el SIMILAR PIPELINES LIST que correspondan al tipo primario]
      }
    },
    {
      //LITERAL DE TIPO SECUNDARIO: Existirá sólamente si es posible convertir el problema en uno de otro tipo. Si esto no es recomendable, saltéate este literal.
      "type": [String: alias que describe el tipo secundario al que se puede adaptar problema, puede ser "regression", "classification" o "clustering" y diferente al tipo primario],
      "paragraph": [String: Este párrafo analizará por qué puede llevarse el problema a uno de otro tipo y de qué manera (por ejemplo, transformando alguna feature). Luego, dará
      recomendaciones de los mejores modelos que pueden aplicarse y por qué dentro de ese tipo, dando una justificación profunda y adaptada al problema del por qué se recomiendan
      estos modelos y no otros],
      "tables": {
        "modelsAlias": [Array de Strings: alias de 4 modelos recomendados de este tipo],
        "similarPipelinesAlias": [Array de Strings: alias de los 3 pipelines más similares que figuran en el SIMILAR PIPELINES LIST que correspondan al tipo secundario]
      }
    }
}
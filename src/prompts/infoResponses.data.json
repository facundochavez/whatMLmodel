[
  {
    "input": "Based on the features of Titanic passengers, I need to determine the probability of survival.",
    "output": {
      "name": "Titanic Survivors",
      "alias": "titanic-survivors",
      "datasetDescription": "Based on the features of Titanic passengers (such as sex, age and socio-economic class), I need to determine the probability of survival.",
      "language": "en",
      "details": {
        "problemDescription": "Based on the features of Titanic passengers, the goal is to determine which types of people were more likely to survive.",
        "mainFeatures": "Sex, Age, Pclass, Fare, SibSp, Parch, Survival",
        "targetVariable": "Survival Status",
        "numberOfFeatures": 7,
        "datasetSize": 3000,
        "hasComplexData": false
      }
    }
  },
  {
    "input": "Dataset contains information about residential properties in Ames, Iowa, the goal is to predict the sales price of a given property.",
    "output": {
      "name": "House Prices",
      "alias": "house-prices",
      "datasetDescription": "Dataset contains information about residential properties in Ames, Iowa (such as quality, size, location, and other property attributes). The goal is to predict the sale price of properties based on various features such as quality, size, location, and other property attributes.",
      "language": "en",
      "details": {
        "problemDescription": "Based on information about residential properties in Ames, Iowa, the goal is to predict the sales price of a given property.",
        "mainFeatures": "OverallQual, GrLivArea, YearBuilt, Neighborhood, TotalBsmtSF, GarageCars, SalePrice",
        "targetVariable": "Sale Price",
        "numberOfFeatures": 81,
        "datasetSize": 1460,
        "hasComplexData": false
      }
    }
  },
  {
    "input": "Based on grayscale images of handwritten digits from 0 to 9, the goal is to develop a model that can accurately classify each digit.",
    "output": {
      "name": "Digit Recognizer",
      "alias": "digit-recognizer",
      "datasetDescription": "Based on grayscale images of handwritten digits from 0 to 9, the goal is to develop a model that can accurately classify each digit.",
      "language": "en",
      "details": {
        "problemDescription": "Based on grayscale images of handwritten digits, the goal is to build a model to accurately classify each digit from 0 to 9.",
        "mainFeatures": "Image, Label",
        "targetVariable": "Label",
        "numberOfFeatures": 2,
        "datasetSize": 4200,
        "hasComplexData": false
      }
    }
  },
  {
    "input": "High resolution images of tumor tissues are available in a cancer study. The goal is to classify the images into categories such as benign, malignant, or uncertain, but the data set is very large and has high dimensionality due to the resolution of the images.",
    "output": {
      "name": "Tumor Tissues",
      "alias": "tumor-tissues",
      "datasetDescription": "High resolution images of tumor tissues are available in a cancer study. The dataset is very large and has high dimensionality due to the resolution of the images. The goal is to classify the images into categories such as benign, malignant, or uncertain.",
      "language": "en",
      "details": {
        "problemDescription": "Given high-resolution images of tumor tissues, the goal is to classify these images into categories such as benign, malignant, or uncertain.",
        "mainFeatures": "ImagePixels, TumorCategory",
        "targetVariable": "Tumor Category",
        "numberOfFeatures": 10000,
        "datasetSize": 2500,
        "hasComplexData": true
      }
    }
  },
  {
    "input": "You have a dataset with high-dimensional features extracted from medical images, such as MRI scans. The dataset includes a large number of features representing different aspects of the images. The goal is to build a model to classify these images into different categories, such as 'normal', 'abnormal', and 'critical'.",
    "output": {
      "name": "Medical Images",
      "alias": "medical-images",
      "datasetDescription": "You have a dataset with high-dimensional features extracted from medical images, such as MRI scans. The dataset includes a large number of features representing different aspects of the images. The goal is to build a model to classify these images into different categories, such as 'normal', 'abnormal', and 'critical'.",
      "language": "en",
      "details": {
        "problemDescription": "Given high-dimensional features extracted from medical images, the goal is to classify these images into categories such as 'normal', 'abnormal', and 'critical'.",
        "mainFeatures": "ImageFeatures, NormalClass, AbnormalClass, CriticalClass",
        "targetVariable": "Image Category",
        "numberOfFeatures": 1000,
        "datasetSize": 2000,
        "hasComplexData": true
      }
    }
  },
  {
    "input": "You have a dataset containing historical house prices along with features such as the number of bedrooms, square footage, and location. The goal is to predict the house prices based on these features. Additionally, you want to categorize houses into different price ranges (e.g., low, medium, high) for market analysis purposes.",
    "output": {
      "name": "House Price",
      "alias": "house-price",
      "datasetDescription": "You have a dataset containing historical house prices along with features such as the number of bedrooms, square footage, and location. The goal is to predict house prices based on these features. Additionally, you want to categorize houses into different price ranges (e.g., low, medium, high) for market analysis purposes.",
      "language": "en",
      "details": {
        "problemDescription": "Given historical house prices and features like the number of bedrooms, square footage, and location, the goal is to predict house prices and categorize houses into different price ranges for market analysis.",
        "mainFeatures": "NumberOfBedrooms, SquareFootage, Location, HousePrice, PriceCategory",
        "targetVariable": "House Price",
        "numberOfFeatures": 5,
        "datasetSize": 3000,
        "hasComplexData": false
      }
    }
  },
  {
    "input": "Based on the features of customer reviews (such as review text, rating, and length of review), I want to build a model to predict the satisfaction score of each review. The satisfaction score is a numerical value ranging from 1 to 10.",
    "output": {
      "name": "Customer Review Satisfaction",
      "alias": "customer-review-satisfaction",
      "datasetDescription": "Based on the features of customer reviews (such as review text, rating, and length of review), I want to build a model to predict the satisfaction score of each review. The satisfaction score is a numerical value ranging from 1 to 10.",
      "language": "en",
      "details": {
        "problemDescription": "Given various features of customer reviews, the goal is to predict the satisfaction score of each review, which is a numerical value ranging from 1 to 10.",
        "mainFeatures": "ReviewText, Rating, ReviewLength, SatisfactionScore",
        "targetVariable": "Satisfaction Score",
        "numberOfFeatures": 4,
        "datasetSize": 5000,
        "hasComplexData": true
      }
    }
  },
  {
    "input": "You are working on a dataset of customer transactions with features like purchase frequency, average transaction amount, and customer demographics. The goal is to segment customers into distinct groups based on their purchasing behavior. However, you also want to use these segments to predict which group a new customer belongs to, essentially classifying new customers into existing segments.",
    "output": {
      "name": "Customer Transactions",
      "alias": "customer-transactions",
      "datasetDescription": "You are working on a dataset of customer transactions with features like purchase frequency, average transaction amount, and customer demographics. The goal is to segment customers into distinct groups based on their purchasing behavior and classify new customers into these segments.",
      "language": "en",
      "details": {
        "problemDescription": "Given features related to customer transactions, the goal is to segment customers into distinct groups based on their purchasing behavior and classify new customers into these predefined segments.",
        "mainFeatures": "PurchaseFrequency, AvgTransactionAmount, CustomerDemographics, CustomerSegment",
        "targetVariable": "Customer Segment",
        "numberOfFeatures": 4,
        "datasetSize": 3000,
        "hasComplexData": false
      }
    }
  },
  {
    "input": "You have a dataset of residential properties with features such as location, size, and type of property. Your goal is to predict the price of the properties. First, you want to cluster the properties into different segments based on their features, and then apply regression models within each segment to predict the property prices.",
    "output": {
      "name": "Residential Property Pricing",
      "alias": "residential-property-pricing",
      "datasetDescription": "You have a dataset of residential properties with features such as location, size, and type of property. The goal is to predict the price of the properties. Initially, properties will be clustered into different segments based on these features, and then regression models will be applied within each segment to predict the property prices.",
      "language": "en",
      "details": {
        "problemDescription": "Given features related to residential properties, the goal is to first cluster the properties into different segments based on their characteristics and then use regression models to predict the property prices within each segment.",
        "mainFeatures": "Location, Size, PropertyType, PropertyPrice",
        "targetVariable": "Property Price",
        "numberOfFeatures": 4,
        "datasetSize": 1500,
        "hasComplexData": false
      }
    }
  },
  {
    "input": "We have a dataset containing customer reviews for various products. The dataset includes text reviews with numerous features extracted from the text, such as TF-IDF vectors and word embeddings. Our goal is to build a model to classify these reviews into categories such as 'positive', 'negative', and 'neutral'.",
    "output": {
      "name": "Customer Products Review",
      "alias": "customer-products-review",
      "datasetDescription": "We have a dataset containing customer reviews for various products. The dataset includes text reviews with features extracted from the text, such as TF-IDF vectors and word embeddings. The goal is to build a model to classify these reviews into categories such as 'positive', 'negative', and 'neutral'.",
      "language": "en",
      "details": {
        "problemDescription": "Given customer reviews with features extracted from text, the goal is to classify these reviews into categories like 'positive', 'negative', and 'neutral'.",
        "mainFeatures": "TF-IDF Vectors, Word Embeddings, ReviewText, ReviewCategory",
        "targetVariable": "Review Category",
        "numberOfFeatures": 3000,
        "datasetSize": 5000,
        "hasComplexData": true
      }
    }
  },
  {
    "input": "Estimate the air quality index (AQI) for a specific location based on factors like temperature, humidity, wind speed, and historical pollution levels.",
    "output": {
      "name": "Air Quality Index",
      "alias": "air-quality-index",
      "datasetDescription": "Estimate the air quality index (AQI) for a specific location based on factors like temperature, humidity, wind speed, and historical pollution levels.",
      "language": "en",
      "details": {
        "problemDescription": "Given factors such as temperature, humidity, wind speed, and historical pollution levels, the goal is to estimate the air quality index (AQI) for a specific location.",
        "mainFeatures": "Temperature, Humidity, WindSpeed, HistoricalPollutionLevels, AQI",
        "targetVariable": "Air Quality Index",
        "numberOfFeatures": 5,
        "datasetSize": 2000,
        "hasComplexData": false
      }
    }
  }
]
